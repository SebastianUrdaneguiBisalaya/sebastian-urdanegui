---
import "../styles/global.css";
import { ClientRouter } from "astro:transitions";
const lang = Astro.currentLocale;
const currentPath = Astro.url.pathname.replace(`/${lang}`, "");
const newpathES = `/es${currentPath}`;
const newpathEN = `${currentPath}`;
---

<html lang={lang} class="dark">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Sebastian Marat Urdanegui Bisalaya | Full-Stack Developer</title>
        <ClientRouter />
	</head>
	<body class="bg-white dark:bg-dark">
        <div class="max-w-3xl w-full mx-auto p-6 flex flex-col gap-2">
            <header class="w-full flex flex-col items-center justify-center">
                <div class="flex flex-col justify-between items-center gap-2 border-b-[0.5px] border-gray-500 w-full py-4">
                    <span class="font-sora font-semibold text-dark/60 dark:text-gray-400 text-sm">
                        Sebastian Marat Urdanegui Bisalaya
                    </span>
                    <button
                        id="dark-mode-toggle"
                        class="p-2 hover:bg-dark/5 dark:hover:bg-white/10 text-dark/60 dark:text-gray-300 rounded-full cursor-pointer"
                        type="button"
                    >
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" stroke-width="0" viewBox="0 0 56 56"><path d="M30 4.6c0-1-.9-2-2-2a2 2 0 00-2 2v5c0 1 .9 2 2 2s2-1 2-2zm9.6 9a2 2 0 000 2.8c.8.8 2 .8 2.9 0L46 13a2 2 0 000-2.9 2 2 0 00-3 0zm-26 2.8c.7.8 2 .8 2.8 0 .8-.7.8-2 0-2.9L13 10c-.7-.7-2-.8-2.9 0-.7.8-.7 2.1 0 3zM28 16a12 12 0 00-12 12 12 12 0 0012 12 12 12 0 0012-12 12 12 0 00-12-12zm0 3.6c4.6 0 8.4 3.8 8.4 8.4 0 4.6-3.8 8.4-8.4 8.4a8.5 8.5 0 01-8.4-8.4c0-4.6 3.8-8.4 8.4-8.4zM51.3 30c1.1 0 2-.9 2-2s-.9-2-2-2h-4.9a2 2 0 00-2 2c0 1.1 1 2 2 2zM4.7 26a2 2 0 00-2 2c0 1.1.9 2 2 2h4.9c1 0 2-.9 2-2s-1-2-2-2zm37.8 13.6a2 2 0 00-3 0 2 2 0 000 2.9l3.6 3.5a2 2 0 002.9 0c.8-.8.8-2.1 0-3zM10 43.1a2 2 0 000 2.9c.8.7 2.1.8 3 0l3.4-3.5c.8-.8.8-2.1 0-2.9-.8-.8-2-.8-2.9 0zm20 3.4c0-1.1-.9-2-2-2a2 2 0 00-2 2v4.9c0 1 .9 2 2 2s2-1 2-2z" stroke="none" fill="currentColor"></path></svg>
                    </button>
                </div>
            </header>
		    <slot />
            <footer class="w-full flex flex-row items-center justify-between py-4 border-t-[0.5px] border-gray-500">
                <p class="text-left text-dark/60 dark:text-gray-400 font-sora text-xs w-full">
                    Sebastian Marat Urdanegui Bisalaya (sebasurdanegui@gmail.com)
                </p>
                <a href="https://github.com/SebastianUrdaneguiBisalaya/sebastian-urdanegui" target="_blank" class="text-right text-dark/60 dark:text-gray-400 font-sora text-xs w-full cursor-pointer hover:underline hover:text-dark dark:hover:text-white/90">
                    {
                        lang === "en" ? "Code" : "CÃ³digo"
                    }
                </a>
            </footer>
        </div>
	</body>
</html>

<style>
    * {
        margin: 0;
        box-sizing: border-box;
    }
    html,
    body {
        width: 100%;
        min-height: 100dvh;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        const darkModeToggleButton = document.getElementById("dark-mode-toggle");
        const applyTheme = () => {
            const theme = localStorage.theme;
            if (theme === "dark") {
                document.documentElement.classList.add("dark");
            } else if (theme === "light") {
                document.documentElement.classList.remove("dark");
            } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
                document.documentElement.classList.add("dark");
            } else {
                document.documentElement.classList.remove("dark");
            }
        };
        applyTheme();
        darkModeToggleButton?.addEventListener("click", () => {
            const isDark = document.documentElement.classList.contains("dark");
            if (isDark) {
                document.documentElement.classList.remove("dark");
                localStorage.setItem("theme", "light");
            } else {
                document.documentElement.classList.add("dark");
                localStorage.setItem("theme", "dark");
            }
        });
    })
</script>